---

- name: MEDIUM | UBTU-22-213015 | PATCH | Ubuntu 22.04 LTS must disable kernel core dumps so that it can fail to a secure state if system initialization fails, shutdown fails or aborts fail.
  when: ubtu22stig_213015
  tags:
    - UBTU-22-213015
    - CAT2
    - CCI-001190
    - SRG-OS-000184-GPOS-00078
    - SV-260473r958550_rule
    - V-260473
    - NIST800-53R4_SC-24
  block:
    - name: MEDIUM | UBTU-22-213015 | PATCH | Ubuntu 22.04 LTS must disable kernel core dumps so that it can fail to a secure state if system initialization fails, shutdown fails or aborts fail. | stop if installed
      when: "'linux-crashdump' in ansible_facts.packages"
      ansible.builtin.systemd:
        name: kdump
        state: stopped

    - name: MEDIUM | UBTU-22-213015 | PATCH | Ubuntu 22.04 LTS must disable kernel core dumps so that it can fail to a secure state if system initialization fails, shutdown fails or aborts fail. | mask
      ansible.builtin.systemd:
        name: kdump
        masked: true

- name: MEDIUM | UBTU-22-213020 | PATCH | Ubuntu 22.04 LTS must implement address space layout randomization to protect its memory from unauthorized code execution.
  when: ubtu22stig_213020
  tags:
    - UBTU-22-213020
    - CAT2
    - CCI-002824
    - SRG-OS-000433-GPOS-00193
    - SV-260474r958928_rule
    - V-260474
    - NIST800-53R4_SI-16
  block:
    - name: MEDIUM | UBTU-22-213020 | PATCH | Ubuntu 22.04 LTS must implement address space layout randomization to protect its memory from unauthorized code execution | find existing settings
      ansible.builtin.find:
        paths: [ '/etc/sysctl.d', '/run/sysctl.d', '/usr/local/lib/sysctl.d', '/usr/lib/sysctl.d', '/lib/sysctl.d' ]
        pattern: '*.conf'
        contains: kernel.randomize_va_space
      register: discovered_sysctl_conf_files

    - name: MEDIUM | UBTU-22-213020 | PATCH | Ubuntu 22.04 LTS must implement address space layout randomization to protect its memory from unauthorized code execution | remove existing bad settings
      ansible.builtin.replace:
        path: "{{ item.path | default(item) }}"
        regexp: ^\s*kernel.randomize_va_space\s*=\s*[ 0, 1 ]
        replace: ''
      with_items:
        - "{{ discovered_sysctl_conf_files.files | map(attribute='path') }}"
        - /etc/sysctl.conf

    - name: MEDIUM | UBTU-22-213020 | PATCH | Ubuntu 22.04 LTS must implement address space layout randomization to protect its memory from unauthorized code execution | add file specific settings
      ansible.posix.sysctl:
        name: kernel.randomize_va_space
        value: '2'
        state: present
        sysctl_file: "{{ ubtu22stig_sysctl_kernel_conf }}"
        reload: true
        sysctl_set: true
        ignoreerrors: true

- name: MEDIUM | UBTU-22-213025 | AUDIT | Ubuntu 22.04 LTS must implement nonexecutable data to protect its memory from unauthorized code execution.
  when: ubtu22stig_213025
  tags:
    - UBTU-22-213025
    - CAT2
    - CCI-002824
    - SRG-OS-000433-GPOS-00192
    - SV-260475r958928_rule
    - V-260475
    - NIST800-53R4_SI-16
  vars:
    warn_control_id: 'MEDIUM | UBTU-22-213025'
  block:
    - name: MEDIUM | UBTU-22-213025 | AUDIT | Ubuntu 22.04 LTS must implement nonexecutable data to protect its memory from unauthorized code execution.
      ansible.builtin.shell: dmesg | grep -i "execute disable"
      changed_when: false
      failed_when: discovered_dmesg_nx_value.rc not in [ 0, 1 ]
      register: discovered_dmesg_nx_value

    - name: MEDIUM | UBTU-22-213025 | AUDIT | Ubuntu 22.04 LTS must implement nonexecutable data to protect its memory from unauthorized code execution. | Dmesg Does Not Contain NX (Execute Disable) protection active.
      when: discovered_dmesg_nx_value.stdout is not defined
      ansible.builtin.shell: grep flags /proc/cpuinfo | grep -w nx | sort -u
      changed_when: false
      failed_when: false
      register: discovered_nx_cpuinfo_settings

    - name: MEDIUM | UBTU-22-213025 | WARN | Ubuntu 22.04 LTS must implement nonexecutable data to protect its memory from unauthorized code execution. | Warning Out.
      when:
        - discovered_dmesg_nx_value.stdout is defined
        - discovered_nx_cpuinfo_settings.stdout is defined
        - "'protection: active' not in discovered_dmesg_nx_value.stdout or 'nx' not in discovered_nx_cpuinfo_settings.stdout"
      ansible.builtin.debug:
        msg: "Warning!! The Ubuntu system you are on does not have NX enabled. Please validate system BIOS settings"

    - name: MEDIUM | UBTU-22-213025 | WARN | Ubuntu 22.04 LTS must implement nonexecutable data to protect its memory from unauthorized code execution. | Warning Count.
      when:
        - discovered_dmesg_nx_value.stdout is defined
        - discovered_nx_cpuinfo_settings.stdout is defined
        - "'protection: active' not in discovered_dmesg_nx_value.stdout or 'nx' not in discovered_nx_cpuinfo_settings.stdout"
      ansible.builtin.import_tasks:
        file: warning_facts.yml
